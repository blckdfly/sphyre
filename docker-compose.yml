services:
  fortro-engine:
    build:
      context: ./Fortro-Engine
      dockerfile: Dockerfile
    image: sphyre-fortro-engine
    container_name: fortro-engine
    restart: unless-stopped
    environment:
      MONGODB_URI: ${MONGODB_URI:?set MONGODB_URI in env}
      IPFS_API_URL: ${IPFS_API_URL:-http://ipfs:5001}
      ETHEREUM_RPC_URL: ${ETHEREUM_RPC_URL:-https://mainnet.base.org}
      PORT: "3000"
      JWT_SECRET: ${JWT_SECRET:?set JWT_SECRET in env}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400}
      ISSUER_DID: ${ISSUER_DID:?set ISSUER_DID in env}
      ISSUER_PRIVATE_KEY: ${ISSUER_PRIVATE_KEY:?set ISSUER_PRIVATE_KEY in env}
      REGISTRY_ADDRESS: ${REGISTRY_ADDRESS:-0x0000000000000000000000000000000000000000}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:?set CORS_ALLOWED_ORIGINS in env}
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://127.0.0.1:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 15

  sphyre-website:
    build:
      context: ./sphyre-website
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: sphyre-website
    restart: unless-stopped
    depends_on:
      fortro-engine:
        condition: service_started

  sphyre-app:
    build:
      context: ./sphyre-app
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: sphyre-app
    restart: unless-stopped
    depends_on:
      fortro-engine:
        condition: service_started

  sphyre-verifier:
    build:
      context: ./sphyre-verifier
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: sphyre-verifier
    restart: unless-stopped
    depends_on:
      fortro-engine:
        condition: service_started
      ipfs:
        condition: service_healthy
    environment:
      - PORT=3000
      - HOST=0.0.0.0   
    expose:
      - "3000"

  sphyre-issuers:
    build:
      context: ./sphyre-issuers
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: sphyre-issuers
    restart: unless-stopped
    depends_on:
      fortro-engine:
        condition: service_started

  ipfs:
    image: ipfs/kubo:latest
    container_name: ipfs
    restart: unless-stopped
    environment:
     IPFS_PROFILE: server
    volumes:
      - ipfs_data:/data/ipfs
    healthcheck:
      test: ["CMD-SHELL", "ipfs --api=/ip4/127.0.0.1/tcp/5001 id >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  # Reverse proxy + TLS
  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - fortro-engine
      - sphyre-website
      - sphyre-app
      - sphyre-verifier
      - sphyre-issuers
      - ipfs
    restart: unless-stopped

volumes:
  ipfs_data:
  caddy_data:
  caddy_config:
